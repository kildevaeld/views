{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2906647efa08ffb28a80","webpack:///./lib/index.js","webpack:///./lib/view.js","webpack:///./lib/baseview.js","webpack:///./lib/object.js","webpack:///./lib/events.js","webpack:///./lib/utils.js","webpack:///./lib/templateview.js","webpack:///./lib/region.js","webpack:///./lib/region-manager.js","webpack:///./lib/layout-view.js","webpack:///./lib/data-view.js","webpack:///./lib/collection-view.js","webpack:///./lib/model.js","webpack:///./lib/collection.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,cAAc;AAC9B,iBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACrIA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,gBAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,4BAA4B,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,iFAAiF;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,mBAAmB;AAClC,iBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,gBAAe,OAAO;AACtB,iBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACxOA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,+BAA8B,cAAc;AAC5C,+DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA,+DAA8D;AAC9D;AACA;AACA;AACA;AACA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,cAAc;AAC5C;AACA,mEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,sCAAsC;AACnE;AACA;AACA;AACA;AACA;AACA,kCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,2CAA2C;AAC5C;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA,iCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,yBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,yBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA6E,mBAAmB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,EAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClXA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC/CA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,gBAAe,qBAAqB;AACpC,iBAAgB;AAChB;AACA;AACA,kCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,KAAK;AACnB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,6BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA,4BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;;;;;;AChJA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,iCAAiC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACnGA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,6CAA4C,eAAe;AAC3D,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC,gBAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACzEA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,oBAAoB,EAAE;AAChD;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,2BAA0B,yBAAyB,EAAE;AACrD;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,QAAQ,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA,EAAC;AACD;;;;;;;AC/HA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,cAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa,UAAU;AACvB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,KAAK;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,MAAM;AACtB,iBAAgB,OAAO;AACvB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACzSA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,kCAAiC,cAAc;AAC/C,6BAA4B;AAC5B;AACA;AACA,6CAA4C,WAAW;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,YAAY,cAAc;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,YAAY,cAAc;AAChF;AACA;AACA;AACA,2CAA0C;AAC1C,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC5JA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,mBAAkB;AAClB;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,OAAO;AAC7B;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA,+CAA8C,aAAa;AAC3D;AACA;AACA;AACA;AACA,mFAAkF,aAAa;AAC/F,cAAa;AACb;AACA,gDAA+C,eAAe;AAC9D;AACA;AACA,kCAAiC,cAAc;AAC/C,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,eAAe;AACtC;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA,uCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C,sDAAqD,kBAAkB;AACvE;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,YAAY,aAAa;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,gDAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,mBAAmB,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD","file":"views.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"views\"] = factory();\n\telse\n\t\troot[\"views\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2906647efa08ffb28a80\n **/","function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./view'));\n__export(require('./templateview'));\n__export(require('./utils'));\n__export(require('./events'));\n__export(require('./object'));\n__export(require('./baseview'));\n__export(require('./region'));\n__export(require('./region-manager'));\n__export(require('./layout-view'));\n__export(require('./data-view'));\n__export(require('./collection-view'));\n__export(require('./model'));\n__export(require('./collection'));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/index.js\n ** module id = 0\n ** module chunks = 0\n **/","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar base = require('./baseview');\nvar utils_1 = require('./utils');\nvar kUIRegExp = /@ui.([a-zA-Z_\\-\\$#]+)/i;\nfunction normalizeUIKeys(obj, uimap) {\n    /*jshint -W030 */\n    var o = {}, k, v, ms, sel, ui;\n    for (k in obj) {\n        v = obj[k];\n        if ((ms = kUIRegExp.exec(k)) !== null) {\n            ui = ms[1], sel = uimap[ui];\n            if (sel != null) {\n                k = k.replace(ms[0], sel);\n            }\n        }\n        o[k] = v;\n    }\n    return o;\n}\nexports.normalizeUIKeys = normalizeUIKeys;\nvar View = (function (_super) {\n    __extends(View, _super);\n    /**\n     * View\n     * @param {ViewOptions} options\n     * @extends BaseView\n     */\n    function View(options) {\n        this._options = options;\n        _super.call(this, options);\n    }\n    View.prototype.delegateEvents = function (events) {\n        this._bindUIElements();\n        events = events || this.events;\n        events = normalizeUIKeys(events, this._ui);\n        var triggers = this._configureTriggers();\n        events = utils_1.utils.extend({}, events, triggers);\n        _super.prototype.delegateEvents.call(this, events);\n        return this;\n    };\n    View.prototype.undelegateEvents = function () {\n        this._unbindUIElements();\n        _super.prototype.undelegateEvents.call(this);\n        return this;\n    };\n    /**\n     * Bind ui elements\n     * @private\n     */\n    View.prototype._bindUIElements = function () {\n        var _this = this;\n        var ui = this.getOption('ui'); //this.options.ui||this.ui\n        if (!ui)\n            return;\n        if (!this._ui) {\n            this._ui = ui;\n        }\n        ui = utils_1.utils.result(this, '_ui');\n        this.ui = {};\n        Object.keys(ui).forEach(function (k) {\n            var elm = _this.$(ui[k]);\n            if (elm && elm.length) {\n                // unwrap if it's a nodelist.\n                if (elm instanceof NodeList) {\n                    elm = elm[0];\n                }\n                _this.ui[k] = elm;\n            }\n        });\n    };\n    /**\n     * Unbind ui elements\n     * @private\n     */\n    View.prototype._unbindUIElements = function () {\n    };\n    /**\n     * Configure triggers\n     * @return {Object} events object\n     * @private\n     */\n    View.prototype._configureTriggers = function () {\n        var triggers = this.getOption('triggers') || {};\n        if (typeof triggers === 'function') {\n            triggers = triggers.call(this);\n        }\n        // Allow `triggers` to be configured as a function\n        triggers = normalizeUIKeys(triggers, this._ui);\n        // Configure the triggers, prevent default\n        // action and stop propagation of DOM events\n        var events = {}, val, key;\n        for (key in triggers) {\n            val = triggers[key];\n            events[key] = this._buildViewTrigger(val);\n        }\n        return events;\n    };\n    /**\n     * builder trigger function\n     * @param  {Object|String} triggerDef Trigger definition\n     * @return {Function}\n     * @private\n     */\n    View.prototype._buildViewTrigger = function (triggerDef) {\n        if (typeof triggerDef === 'string')\n            triggerDef = { event: triggerDef };\n        var options = utils_1.utils.extend({\n            preventDefault: true,\n            stopPropagation: true\n        }, triggerDef);\n        return function (e) {\n            if (e) {\n                if (e.preventDefault && options.preventDefault) {\n                    e.preventDefault();\n                }\n                if (e.stopPropagation && options.stopPropagation) {\n                    e.stopPropagation();\n                }\n            }\n            this.triggerMethod(options.event, {\n                view: this,\n                model: this.model,\n                collection: this.collection\n            });\n        };\n    };\n    return View;\n})(base.BaseView);\nexports.View = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/view.js\n ** module id = 1\n ** module chunks = 0\n **/","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar object_1 = require('./object');\nvar utils_1 = require('./utils');\nvar paddedLt = /^\\s*</;\nvar unbubblebles = 'focus blur change'.split(' ');\nvar viewOptions = ['el', 'id', 'attributes', 'className', 'tagName', 'events'];\nvar BaseView = (function (_super) {\n    __extends(BaseView, _super);\n    /**\n     * BaseView\n     * @param {BaseViewOptions} options\n     * @extends BaseObject\n     */\n    function BaseView(options) {\n        if (options === void 0) { options = {}; }\n        this._cid = utils_1.utils.uniqueId('view');\n        utils_1.utils.extend(this, utils_1.utils.pick(options, viewOptions));\n        this._domEvents = [];\n        if (this.el == null) {\n            this._ensureElement();\n        }\n        else {\n        }\n        _super.call(this, options);\n    }\n    BaseView.find = function (selector, context) {\n        return context.querySelectorAll(selector);\n    };\n    Object.defineProperty(BaseView.prototype, \"cid\", {\n        get: function () {\n            return this._cid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delegate events\n     * @param {EventsMap} events\n     */\n    BaseView.prototype.delegateEvents = function (events) {\n        var _this = this;\n        if (!(events || (events = utils_1.utils.result(this, 'events'))))\n            return this;\n        this.undelegateEvents();\n        var dels = [];\n        for (var key in events) {\n            var method = events[key];\n            if (typeof method !== 'function')\n                method = this[method];\n            var match = key.match(/^(\\S+)\\s*(.*)$/);\n            // Set delegates immediately and defer event on this.el\n            var boundFn = utils_1.utils.bind(method, this);\n            if (match[2]) {\n                this.delegate(match[1], match[2], boundFn);\n            }\n            else {\n                dels.push([match[1], boundFn]);\n            }\n        }\n        dels.forEach(function (d) { _this.delegate(d[0], d[1]); });\n        return this;\n    };\n    /**\n     * Undelegate events\n     */\n    BaseView.prototype.undelegateEvents = function () {\n        if (this.el) {\n            for (var i = 0, len = this._domEvents.length; i < len; i++) {\n                var item = this._domEvents[i];\n                utils_1.html.removeEventListener(this.el, item.eventName, item.handler);\n            }\n            this._domEvents.length = 0;\n        }\n        return this;\n    };\n    BaseView.prototype.delegate = function (eventName, selector, listener) {\n        if (typeof selector === 'function') {\n            listener = selector;\n            selector = null;\n        }\n        var root = this.el;\n        var handler = selector ? function (e) {\n            var node = e.target || e.srcElement;\n            // Already handled\n            if (e.delegateTarget)\n                return;\n            for (; node && node != root; node = node.parentNode) {\n                if (utils_1.html.matches(node, selector)) {\n                    e.delegateTarget = node;\n                    listener(e);\n                }\n            }\n        } : function (e) {\n            if (e.delegateTarget)\n                return;\n            listener(e);\n        };\n        /*jshint bitwise: false*/\n        var useCap = !!~unbubblebles.indexOf(eventName) && selector != null;\n        utils_1.html.addEventListener(this.el, eventName, handler, useCap);\n        this._domEvents.push({ eventName: eventName, handler: handler, listener: listener, selector: selector });\n        return handler;\n    };\n    BaseView.prototype.undelegate = function (eventName, selector, listener) {\n        if (typeof selector === 'function') {\n            listener = selector;\n            selector = null;\n        }\n        if (this.el) {\n            var handlers = this._domEvents.slice();\n            for (var i = 0, len = handlers.length; i < len; i++) {\n                var item = handlers[i];\n                var match = item.eventName === eventName &&\n                    (listener ? item.listener === listener : true) &&\n                    (selector ? item.selector === selector : true);\n                if (!match)\n                    continue;\n                utils_1.html.removeEventListener(this.el, item.eventName, item.handler);\n                this._domEvents.splice(utils_1.utils.indexOf(handlers, item), 1);\n            }\n        }\n        return this;\n    };\n    BaseView.prototype.render = function (options) {\n        return this;\n    };\n    /**\n     * Append the view to a HTMLElement\n     * @param {HTMLElement|string} elm A html element or a selector string\n     * @return {this} for chaining\n     */\n    BaseView.prototype.appendTo = function (elm) {\n        if (elm instanceof HTMLElement) {\n            elm.appendChild(this.el);\n        }\n        else {\n            var el = document.querySelector(elm);\n            el ? el.appendChild(this.el) : void 0;\n        }\n        return this;\n    };\n    /**\n     * Append a element the view\n     * @param {HTMLElement} elm\n     * @param {String} toSelector\n     * @return {this} for chaining\n     */\n    BaseView.prototype.append = function (elm, toSelector) {\n        if (toSelector != null) {\n            var ret = this.$(toSelector);\n            if (ret instanceof NodeList && ret.length > 0) {\n                ret[0].appendChild(elm);\n            }\n            else if (ret instanceof HTMLElement) {\n                ret.appendChild(elm);\n            }\n        }\n        else {\n            this.el.appendChild(elm);\n        }\n        return this;\n    };\n    /**\n     * Convience for view.el.querySelectorAll()\n     * @param {string|HTMLElement} selector\n     */\n    BaseView.prototype.$ = function (selector) {\n        if (selector instanceof HTMLElement) {\n            return selector;\n        }\n        else {\n            return BaseView.find(selector, this.el);\n        }\n    };\n    BaseView.prototype.setElement = function (elm) {\n        this.undelegateEvents();\n        this._setElement(elm);\n        this.delegateEvents();\n    };\n    BaseView.prototype.remove = function () {\n        this._removeElement();\n        return this;\n    };\n    BaseView.prototype._createElement = function (tagName) {\n        return document.createElement(tagName);\n    };\n    BaseView.prototype._ensureElement = function () {\n        if (!this.el) {\n            var attrs = utils_1.utils.extend({}, utils_1.utils.result(this, 'attributes'));\n            if (this.id)\n                attrs.id = utils_1.utils.result(this, 'id');\n            if (this.className)\n                attrs['class'] = utils_1.utils.result(this, 'className');\n            this.setElement(this._createElement(utils_1.utils.result(this, 'tagName') || 'div'));\n            this._setAttributes(attrs);\n        }\n        else {\n            this.setElement(utils_1.utils.result(this, 'el'));\n        }\n    };\n    BaseView.prototype._removeElement = function () {\n        this.undelegateEvents();\n        if (this.el.parentNode)\n            this.el.parentNode.removeChild(this.el);\n    };\n    BaseView.prototype._setElement = function (element) {\n        if (typeof element === 'string') {\n            if (paddedLt.test(element)) {\n                var el = document.createElement('div');\n                el.innerHTML = element;\n                this.el = el.firstElementChild;\n            }\n            else {\n                this.el = document.querySelector(element);\n            }\n        }\n        else {\n            this.el = element;\n        }\n    };\n    BaseView.prototype._setAttributes = function (attrs) {\n        for (var attr in attrs) {\n            attr in this.el ? this.el[attr] = attrs[attr] : this.el.setAttribute(attr, attrs[attr]);\n        }\n    };\n    return BaseView;\n})(object_1.BaseObject);\nexports.BaseView = BaseView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/baseview.js\n ** module id = 2\n ** module chunks = 0\n **/","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar events_1 = require('./events');\nvar utils_1 = require('./utils');\n/** Base object */\nvar BaseObject = (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * Object\n     * @extends EventEmitter\n     */\n    function BaseObject(args) {\n        _super.call(this);\n        this._isDestroyed = false;\n        if (typeof this.initialize === 'function') {\n            utils_1.utils.call(this.initialize, this, utils_1.utils.slice(arguments));\n        }\n    }\n    Object.defineProperty(BaseObject.prototype, \"isDestroyed\", {\n        /**\n         * Whether the object is \"destroyed\" or not\n         * @type boolean\n         */\n        get: function () {\n            return this._isDestroyed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseObject.prototype.destroy = function () {\n        if (this.isDestroyed)\n            return this;\n        this.triggerMethod('before:destroy');\n        this.stopListening();\n        this.off();\n        this._isDestroyed = true;\n        this.triggerMethod('destroy');\n        if (typeof Object.freeze) {\n            Object.freeze(this);\n        }\n        return this;\n    };\n    BaseObject.prototype.triggerMethod = function (eventName) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        utils_1.utils.triggerMethodOn(this, eventName, args);\n        return this;\n    };\n    BaseObject.prototype.getOption = function (prop) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.options) {\n            args.push(this.options);\n        }\n        if (this._options) {\n            args.push(this._options);\n        }\n        args.push(this);\n        return utils_1.utils.getOption(prop, args);\n    };\n    BaseObject.extend = utils_1.extend;\n    return BaseObject;\n})(events_1.EventEmitter);\nexports.BaseObject = BaseObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/object.js\n ** module id = 3\n ** module chunks = 0\n **/","var idCounter = 0;\nfunction getID() {\n    return \"\" + (++idCounter);\n}\nvar EventEmitter = (function () {\n    function EventEmitter() {\n    }\n    Object.defineProperty(EventEmitter.prototype, \"listeners\", {\n        get: function () {\n            return this._listeners;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventEmitter.prototype.on = function (event, fn, ctx, once) {\n        if (once === void 0) { once = false; }\n        var events = (this._listeners || (this._listeners = {}))[event] || (this._listeners[event] = []);\n        //let events = this._listeners[event]||(this._listeners[event]=[])\n        events.push({\n            name: event,\n            once: once,\n            handler: fn,\n            ctx: ctx || this\n        });\n        return this;\n    };\n    EventEmitter.prototype.once = function (event, fn, ctx) {\n        return this.on(event, fn, ctx, true);\n    };\n    EventEmitter.prototype.off = function (eventName, fn) {\n        if (eventName == null) {\n            this._listeners = {};\n        }\n        else if (this._listeners[eventName]) {\n            var events = this._listeners[eventName];\n            if (fn == null) {\n                this._listeners[eventName] = [];\n            }\n            else {\n                for (var i = 0; i < events.length; i++) {\n                    var event_1 = events[i];\n                    if (events[i].handler == fn) {\n                        this._listeners[eventName].splice(i, 1);\n                    }\n                }\n            }\n        }\n    };\n    EventEmitter.prototype.trigger = function (eventName) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var events = (this._listeners || (this._listeners = {}))[eventName] || (this._listeners[eventName] = []);\n        events = events.concat(this._listeners['all'] || []);\n        if (EventEmitter.debugCallback)\n            EventEmitter.debugCallback(this.constructor.name, this.name, eventName, args);\n        var event, a, len = events.length, index, i;\n        for (i = 0; i < events.length; i++) {\n            event = events[i];\n            a = args;\n            if (event.name == 'all') {\n                a = [eventName].concat(args);\n            }\n            event.handler.apply(event.ctx, a);\n            if (event.once === true) {\n                index = this._listeners[event.name].indexOf(event);\n                this._listeners[event.name].splice(index, 1);\n            }\n        }\n        return this;\n    };\n    EventEmitter.prototype.listenTo = function (obj, event, fn, ctx, once) {\n        if (once === void 0) { once = false; }\n        var listeningTo, id, meth;\n        listeningTo = this._listeningTo || (this._listeningTo = {});\n        id = obj.listenId || (obj.listenId = getID());\n        listeningTo[id] = obj;\n        meth = once ? 'once' : 'on';\n        obj[meth](event, fn, this);\n        return this;\n    };\n    EventEmitter.prototype.listenToOnce = function (obj, event, fn, ctx) {\n        return this.listenTo(obj, event, fn, ctx, true);\n    };\n    EventEmitter.prototype.stopListening = function (obj, event, callback) {\n        var listeningTo = this._listeningTo;\n        if (!listeningTo)\n            return this;\n        var remove = !event && !callback;\n        if (!callback && typeof event === 'object')\n            callback = this;\n        if (obj)\n            (listeningTo = {})[obj.listenId] = obj;\n        for (var id in listeningTo) {\n            obj = listeningTo[id];\n            obj.off(event, callback, this);\n            if (remove || !Object.keys(obj.listeners).length) {\n                delete this._listeningTo[id];\n            }\n        }\n        return this;\n    };\n    return EventEmitter;\n})();\nexports.EventEmitter = EventEmitter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/events.js\n ** module id = 4\n ** module chunks = 0\n **/","var ElementProto = (typeof Element !== 'undefined' && Element.prototype) || {};\nvar matchesSelector = ElementProto.matches ||\n    ElementProto.webkitMatchesSelector ||\n    ElementProto.mozMatchesSelector ||\n    ElementProto.msMatchesSelector ||\n    ElementProto.oMatchesSelector || function (selector) {\n    var nodeList = (this.parentNode || document).querySelectorAll(selector) || [];\n    return !!~utils.indexOf(nodeList, this);\n};\nvar elementAddEventListener = ElementProto.addEventListener || function (eventName, listener) {\n    return this.attachEvent('on' + eventName, listener);\n};\nvar elementRemoveEventListener = ElementProto.removeEventListener || function (eventName, listener) {\n    return this.detachEvent('on' + eventName, listener);\n};\nfunction extend(protoProps, staticProps) {\n    var parent = this;\n    var child;\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (protoProps && utils.has(protoProps, 'constructor')) {\n        child = protoProps.constructor;\n    }\n    else {\n        child = function () { return parent.apply(this, arguments); };\n    }\n    // Add static properties to the constructor function, if supplied.\n    utils.extend(child, parent, staticProps);\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () { this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps)\n        utils.extend(child.prototype, protoProps);\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n    return child;\n}\nexports.extend = extend;\nvar html;\n(function (html) {\n    function matches(elm, selector) {\n        return matchesSelector.call(elm, selector);\n    }\n    html.matches = matches;\n    function addEventListener(elm, eventName, listener, useCap) {\n        if (useCap === void 0) { useCap = false; }\n        elementAddEventListener.call(elm, eventName, listener, useCap);\n    }\n    html.addEventListener = addEventListener;\n    function removeEventListener(elm, eventName, listener) {\n        elementRemoveEventListener.call(elm, eventName, listener);\n    }\n    html.removeEventListener = removeEventListener;\n    function addClass(elm, className) {\n        if (elm.classList)\n            elm.classList.add(className);\n        else {\n            elm.className = elm.className.split(' ').concat(className.split(' ')).join(' ');\n        }\n    }\n    html.addClass = addClass;\n    function removeClass(elm, className) {\n        if (elm.classList)\n            elm.classList.remove(className);\n        else {\n            elm.className = elm.className.split(' ').concat(className.split(' ')).join(' ');\n        }\n    }\n    html.removeClass = removeClass;\n})(html = exports.html || (exports.html = {}));\nvar nativeBind = Function.prototype.bind;\nvar noop = function () { };\nvar idCounter = 0;\n/** @module utils */\nvar utils;\n(function (utils) {\n    function camelcase(input) {\n        return input.toLowerCase().replace(/-(.)/g, function (match, group1) {\n            return group1.toUpperCase();\n        });\n    }\n    utils.camelcase = camelcase;\n    ;\n    /** Generate an unique id with an optional prefix\n     * @param {string} prefix\n     * @return {string}\n     */\n    function uniqueId(prefix) {\n        if (prefix === void 0) { prefix = ''; }\n        return prefix + (++idCounter);\n    }\n    utils.uniqueId = uniqueId;\n    function isObject(obj) {\n        return obj === Object(obj);\n    }\n    utils.isObject = isObject;\n    function extend(obj) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (!utils.isObject(obj))\n            return obj;\n        var o, k;\n        for (var _a = 0; _a < args.length; _a++) {\n            o = args[_a];\n            if (!utils.isObject(o))\n                continue;\n            for (k in o) {\n                if (utils.has(o, k))\n                    obj[k] = o[k];\n            }\n        }\n        return obj;\n    }\n    utils.extend = extend;\n    function pick(obj, props) {\n        var out = {}, prop;\n        for (var _i = 0; _i < props.length; _i++) {\n            prop = props[_i];\n            if (utils.has(obj, prop))\n                out[prop] = obj[prop];\n        }\n        return out;\n    }\n    utils.pick = pick;\n    function has(obj, prop) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    }\n    utils.has = has;\n    function indexOf(array, item) {\n        for (var i = 0, len = array.length; i < len; i++)\n            if (array[i] === item)\n                return i;\n        return -1;\n    }\n    utils.indexOf = indexOf;\n    function result(obj, prop, ctx, args) {\n        var ret = obj[prop];\n        return (typeof ret === 'function') ? utils.call(ret, ctx, args || []) : ret;\n    }\n    utils.result = result;\n    function values(obj) {\n        var output = [];\n        for (var k in obj)\n            if (utils.has(obj, k)) {\n                output.push(obj[k]);\n            }\n        return output;\n    }\n    utils.values = values;\n    function find(array, callback, ctx) {\n        var i, v;\n        for (i = 0; i < array.length; i++) {\n            v = array[i];\n            if (callback.call(ctx, v))\n                return v;\n        }\n        return null;\n    }\n    utils.find = find;\n    function proxy(from, to, fns) {\n        if (!Array.isArray(fns))\n            fns = [fns];\n        fns.forEach(function (fn) {\n            if (typeof to[fn] === 'function') {\n                from[fn] = utils.bind(to[fn], to);\n            }\n        });\n    }\n    utils.proxy = proxy;\n    function bind(method, context) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        if (typeof method !== 'function')\n            throw new Error('method not at function');\n        if (nativeBind != null)\n            return nativeBind.call.apply(nativeBind, [method, context].concat(args));\n        args = args || [];\n        var fnoop = function () { };\n        var fBound = function () {\n            var ctx = this instanceof fnoop ? this : context;\n            return utils.call(method, ctx, args.concat(utils.slice(arguments)));\n        };\n        fnoop.prototype = this.prototype;\n        fBound.prototype = new fnoop();\n        return fBound;\n    }\n    utils.bind = bind;\n    function call(fn, ctx, args) {\n        if (args === void 0) { args = []; }\n        switch (args.length) {\n            case 0:\n                return fn.call(ctx);\n            case 1:\n                return fn.call(ctx, args[0]);\n            case 2:\n                return fn.call(ctx, args[0], args[1]);\n            case 3:\n                return fn.call(ctx, args[0], args[1], args[2]);\n            case 4:\n                return fn.call(ctx, args[0], args[1], args[2], args[3]);\n            case 5:\n                return fn.call(ctx, args[0], args[1], args[2], args[3], args[4]);\n            default:\n                return fn.apply(ctx, args);\n        }\n    }\n    utils.call = call;\n    function slice(array) {\n        return Array.prototype.slice.call(array);\n    }\n    utils.slice = slice;\n    function equal(a, b) {\n        return eq(a, b, [], []);\n    }\n    utils.equal = equal;\n    function triggerMethodOn(obj, eventName, args) {\n        var ev = camelcase(\"on-\" + eventName.replace(':', '-'));\n        if (obj[ev] && typeof obj[ev] === 'function') {\n            utils.call(obj[ev], obj, args);\n        }\n        if (typeof obj.trigger === 'function') {\n            args = [eventName].concat(args);\n            utils.call(obj.trigger, obj, args);\n        }\n    }\n    utils.triggerMethodOn = triggerMethodOn;\n    function getOption(option, objs) {\n        for (var _i = 0; _i < objs.length; _i++) {\n            var o = objs[_i];\n            if (isObject(o) && o[option])\n                return o[option];\n        }\n        return null;\n    }\n    utils.getOption = getOption;\n    function sortBy(obj, value, context) {\n        var iterator = typeof value === 'function' ? value : function (obj) { return obj[value]; };\n        return obj\n            .map(function (value, index, list) {\n            return {\n                value: value,\n                index: index,\n                criteria: iterator.call(context, value, index, list)\n            };\n        })\n            .sort(function (left, right) {\n            var a = left.criteria;\n            var b = right.criteria;\n            if (a !== b) {\n                if (a > b || a === void 0)\n                    return 1;\n                if (a < b || b === void 0)\n                    return -1;\n            }\n            return left.index - right.index;\n        })\n            .map(function (item) {\n            return item.value;\n        });\n    }\n    utils.sortBy = sortBy;\n})(utils = exports.utils || (exports.utils = {}));\nfunction eq(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b)\n        return a !== 0 || 1 / a == 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null)\n        return a === b;\n    // Unwrap any wrapped objects.\n    //if (a instanceof _) a = a._wrapped;\n    //if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className != toString.call(b))\n        return false;\n    switch (className) {\n        // Strings, numbers, dates, and booleans are compared by value.\n        case '[object String]':\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return a == String(b);\n        case '[object Number]':\n            // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n            // other numeric values.\n            return a !== +a ? b !== +b : (a === 0 ? 1 / a === 1 / b : a === +b);\n        case '[object Date]':\n        case '[object Boolean]':\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a == +b;\n        // RegExps are compared by their source patterns and flags.\n        case '[object RegExp]':\n            return a.source == b.source &&\n                a.global == b.global &&\n                a.multiline == b.multiline &&\n                a.ignoreCase == b.ignoreCase;\n    }\n    if (typeof a != 'object' || typeof b != 'object')\n        return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n        // Linear search. Performance is inversely proportional to the number of\n        // unique nested structures.\n        if (aStack[length] == a)\n            return bStack[length] == b;\n    }\n    // Objects with different constructors are not equivalent, but `Object`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (aCtor !== bCtor && !(typeof aCtor === 'function' && (aCtor instanceof aCtor) &&\n        typeof bCtor === 'function' && (bCtor instanceof bCtor))) {\n        return false;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0, result = true;\n    // Recursively compare objects and arrays.\n    if (className === '[object Array]') {\n        // Compare array lengths to determine if a deep comparison is necessary.\n        size = a.length;\n        result = size === b.length;\n        if (result) {\n            // Deep compare the contents, ignoring non-numeric properties.\n            while (size--) {\n                if (!(result = eq(a[size], b[size], aStack, bStack)))\n                    break;\n            }\n        }\n    }\n    else {\n        // Deep compare objects.\n        for (var key in a) {\n            if (utils.has(a, key)) {\n                // Count the expected number of properties.\n                size++;\n                // Deep compare each member.\n                if (!(result = utils.has(b, key) && eq(a[key], b[key], aStack, bStack)))\n                    break;\n            }\n        }\n        // Ensure that both objects contain the same number of properties.\n        if (result) {\n            for (key in b) {\n                if (utils.has(b, key) && !(size--))\n                    break;\n            }\n            result = !size;\n        }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n}\n;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/utils.js\n ** module id = 5\n ** module chunks = 0\n **/","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar views = require('./view');\nvar TemplateView = (function (_super) {\n    __extends(TemplateView, _super);\n    /** TemplateView\n     * @param {TemplateViewOptions} options\n     * @extends View\n     */\n    function TemplateView(options) {\n        if (options && options.template) {\n            this.template = options.template;\n        }\n        _super.call(this, options);\n    }\n    TemplateView.prototype.getTemplateData = function () {\n        return {};\n    };\n    TemplateView.prototype.render = function (options) {\n        if (options === void 0) { options = {}; }\n        if (!options.silent)\n            this.triggerMethod('before:render');\n        this.renderTemplate(this.getTemplateData());\n        if (!options.silent)\n            this.triggerMethod('render');\n        return this;\n    };\n    TemplateView.prototype.renderTemplate = function (data) {\n        var template = this.getOption('template');\n        if (typeof template === 'function') {\n            template = template.call(this, data);\n        }\n        if (template && typeof template === 'string') {\n            this.attachTemplate(template);\n        }\n    };\n    TemplateView.prototype.attachTemplate = function (template) {\n        this.undelegateEvents();\n        this.el.innerHTML = template;\n        this.delegateEvents();\n    };\n    return TemplateView;\n})(views.View);\nexports.TemplateView = TemplateView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/templateview.js\n ** module id = 6\n ** module chunks = 0\n **/","/* global BaseClass */\n/* jshint latedef:nofunc */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar object_1 = require('./object');\nvar utils_1 = require('./utils');\n/** Region  */\nvar Region = (function (_super) {\n    __extends(Region, _super);\n    /**\n     * Regions manage a view\n     * @param {Object} options\n     * @param {HTMLElement} options.el  A Html element\n     * @constructor Region\n     * @extends BaseObject\n     * @inheritdoc\n     */\n    function Region(options) {\n        this.options = options;\n        this._el = this.getOption('el');\n        _super.call(this);\n    }\n    Object.defineProperty(Region.prototype, \"view\", {\n        get: function () {\n            return this._view;\n        },\n        set: function (view) {\n            this.show(view);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Region.prototype, \"el\", {\n        get: function () {\n            return this._el;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Build region from a definition\n     * @param {Object|String|Region} def The description of the region\n     * @return {Region}\n     */\n    Region.buildRegion = function (def, context) {\n        if (context === void 0) { context = null; }\n        if (def instanceof Region) {\n            return def;\n        }\n        else if (typeof def === 'string') {\n            return buildBySelector(def, Region, context);\n        }\n        else {\n            return buildByObject(def, context);\n        }\n    };\n    /**\n   * Show a view in the region.\n   * This will destroy or remove any existing views.\n   * @param  {View} view    The view to Show\n   * @return {Region}       this for chaining.\n   */\n    Region.prototype.show = function (view, options) {\n        var diff = view !== this._view;\n        if (diff) {\n            // Remove any containing views\n            this.empty();\n            // If the view is destroyed be others\n            view.once('destroy', this.empty, this);\n            view.once('render', function () {\n                utils_1.utils.triggerMethodOn(view, 'show');\n            });\n            view.render();\n            utils_1.utils.triggerMethodOn(view, 'before:show');\n            this._attachHtml(view);\n            this._view = view;\n        }\n        return this;\n    };\n    /**\n     * Destroy the region, this will remove any views, but not the containing element\n     * @return {Region} this for chaining\n     */\n    Region.prototype.destroy = function () {\n        this.empty();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Empty the region. This will destroy any existing view.\n     * @return {Region} this for chaining;\n     */\n    Region.prototype.empty = function () {\n        if (!this._view)\n            return;\n        var view = this._view;\n        view.off('destroy', this.empty, this);\n        this.trigger('before:empty', view);\n        this._destroyView();\n        this.trigger('empty', view);\n        delete this._view;\n        return this;\n    };\n    /**\n     * Attach the view element to the regions element\n     * @param {View} view\n     * @private\n     *\n     */\n    Region.prototype._attachHtml = function (view) {\n        this._el.innerHTML = '';\n        this._el.appendChild(view.el);\n    };\n    Region.prototype._destroyView = function () {\n        var view = this._view;\n        if ((view.destroy && typeof view.destroy === 'function') && !view.isDestroyed) {\n            view.destroy();\n        }\n        else if (view.remove && typeof view.remove === 'function') {\n            view.remove();\n        }\n        this._el.innerHTML = '';\n    };\n    return Region;\n})(object_1.BaseObject);\nexports.Region = Region;\nfunction buildByObject(object, context) {\n    if (object === void 0) { object = {}; }\n    if (!object.selector)\n        throw new Error('No selector specified: ' + object);\n    return buildBySelector(object.selector, object.regionClass || Region, context);\n}\nfunction buildBySelector(selector, Klass, context) {\n    if (Klass === void 0) { Klass = Region; }\n    context = context || document;\n    var el = context.querySelector(selector);\n    if (!el)\n        throw new Error('selector must exist in the dom');\n    return new Klass({\n        el: el\n    });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/region.js\n ** module id = 7\n ** module chunks = 0\n **/","/* global BaseClass, __has */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar object_1 = require('./object');\nvar region_1 = require('./region');\nvar utils_1 = require('./utils');\nvar RegionManager = (function (_super) {\n    __extends(RegionManager, _super);\n    /** Region manager\n     * @extends BaseObject\n     */\n    function RegionManager() {\n        _super.call(this);\n        this._regions = {};\n    }\n    Object.defineProperty(RegionManager.prototype, \"regions\", {\n        /**\n         * Regions\n         * @type {string:Region}\n         */\n        get: function () {\n            return this._regions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n      * Add one or more regions to the region manager\n      * @param {Object} regions\n      */\n    RegionManager.prototype.addRegions = function (regions) {\n        var def, out = {}, keys = Object.keys(regions);\n        keys.forEach(function (k) {\n            def = regions[k];\n            out[k] = this.addRegion(k, def);\n        }, this);\n        return out;\n    };\n    /**\n     * Add a region to the RegionManager\n     * @param {String} name   The name of the regions\n     * @param {String|Object|Region|HTMLElement} def The region to associate with the name and the RegionManager\n     */\n    RegionManager.prototype.addRegion = function (name, def) {\n        var region = region_1.Region.buildRegion(def);\n        this._setRegion(name, region);\n        return region;\n    };\n    /**\n     * Remove one or more regions from the manager\n     * @param {...name} name A array of region names\n     */\n    RegionManager.prototype.removeRegion = function (names) {\n        //let names = utils.slice(arguments)\n        if (typeof names === 'string') {\n            names = [names];\n        }\n        names.forEach(function (name) {\n            if (utils_1.utils.has(this.regions, name)) {\n                var region = this.regions[name];\n                region.destroy();\n                this._unsetRegion(name);\n            }\n        }, this);\n    };\n    /**\n     * Destroy the regionmanager\n     */\n    RegionManager.prototype.destroy = function () {\n        this.removeRegions();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Remove all regions from the manager\n     */\n    RegionManager.prototype.removeRegions = function () {\n        utils_1.utils.call(this.removeRegion, this, Object.keys(this._regions));\n    };\n    /**\n     * @private\n     */\n    RegionManager.prototype._setRegion = function (name, region) {\n        if (this._regions[name]) {\n            this._regions[name].destroy();\n        }\n        this._regions[name] = region;\n    };\n    /**\n     * @private\n     */\n    RegionManager.prototype._unsetRegion = function (name) {\n        delete this._regions[name];\n    };\n    return RegionManager;\n})(object_1.BaseObject);\nexports.RegionManager = RegionManager;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/region-manager.js\n ** module id = 8\n ** module chunks = 0\n **/","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\n/*global View, RegionManager, Region*/\nvar templateview_1 = require('./templateview');\nvar region_manager_1 = require('./region-manager');\nvar utils_1 = require('./utils');\nvar region_1 = require('./region');\nvar LayoutView = (function (_super) {\n    __extends(LayoutView, _super);\n    /**\n     * LayoutView\n     * @param {Object} options options\n     * @constructor LayoutView\n     * @extends TemplateView\n     */\n    function LayoutView(options) {\n        // Set region manager\n        this._regionManager = new region_manager_1.RegionManager();\n        utils_1.utils.proxy(this, this._regionManager, ['removeRegion', 'removeRegions']);\n        this._regions = this.getOption('regions', options || {});\n        _super.call(this, options);\n    }\n    Object.defineProperty(LayoutView.prototype, \"regions\", {\n        get: function () {\n            return this._regionManager.regions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LayoutView.prototype.render = function (options) {\n        this.triggerMethod('before:render');\n        _super.prototype.render.call(this, { silent: true });\n        this.addRegion(this._regions || {});\n        this.triggerMethod('render');\n        return this;\n    };\n    /**\n     * Add one or more regions to the view\n     * @param {string|RegionMap} name\n     * @param {Object|string|HTMLElement} def\n     */\n    LayoutView.prototype.addRegion = function (name, def) {\n        var regions = {};\n        if (typeof name === 'string') {\n            if (def == null)\n                throw new Error('add region');\n            regions[name] = def;\n        }\n        else {\n            regions = name;\n        }\n        for (var k in regions) {\n            var region = region_1.Region.buildRegion(regions[k], this.el);\n            this._regionManager.addRegion(k, region);\n        }\n    };\n    /**\n     * Delete one or more regions from the the layoutview\n     * @param {string|Array<string>} name\n     */\n    LayoutView.prototype.removeRegion = function (name) {\n        this._regionManager.removeRegion(name);\n    };\n    LayoutView.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this._regionManager.destroy();\n    };\n    return LayoutView;\n})(templateview_1.TemplateView);\nexports.LayoutView = LayoutView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/layout-view.js\n ** module id = 9\n ** module chunks = 0\n **/","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar templateview_1 = require('./templateview');\nvar utils_1 = require('./utils');\nvar DataView = (function (_super) {\n    __extends(DataView, _super);\n    /**\n     * DataView\n     * @param {DataViewOptions} options\n     * @extends TemplateView\n     */\n    function DataView(options) {\n        if (options.model) {\n            this.model = options.model;\n        }\n        if (options.collection) {\n            this.collection = options.collection;\n        }\n        _super.call(this, options);\n    }\n    Object.defineProperty(DataView.prototype, \"model\", {\n        get: function () { return this._model; },\n        set: function (model) {\n            this.setModel(model);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataView.prototype, \"collection\", {\n        get: function () { return this._collection; },\n        set: function (collection) {\n            this.setCollection(collection);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataView.prototype.setModel = function (model) {\n        if (this._model === model)\n            return;\n        this.triggerMethod('before:model', this._model, model);\n        if (this._model) {\n            this.stopListening(this._model);\n        }\n        this._model = model;\n        this.triggerMethod('model', model);\n    };\n    DataView.prototype.setCollection = function (collection) {\n        if (this._collection === collection)\n            return;\n        this.triggerMethod('before:collection', this._collection, collection);\n        if (this._collection) {\n            this.stopListening(this._collection);\n        }\n        this._collection = collection;\n        this.triggerMethod('collection', collection);\n    };\n    DataView.prototype.getTemplateData = function () {\n        return this.model ?\n            typeof this.model.toJSON === 'function' ?\n                this.model.toJSON() : this.model : {};\n    };\n    DataView.prototype.delegateEvents = function (events) {\n        events = events || this.events;\n        //events = normalizeUIKeys(events)\n        var _a = this._filterEvents(events), c = _a.c, e = _a.e, m = _a.m;\n        _super.prototype.delegateEvents.call(this, e);\n        this._delegateDataEvents(m, c);\n        return this;\n    };\n    DataView.prototype.undelegateEvents = function () {\n        this._undelegateDataEvents();\n        _super.prototype.undelegateEvents.call(this);\n        return this;\n    };\n    DataView.prototype._delegateDataEvents = function (model, collection) {\n        var _this = this;\n        this._dataEvents = {};\n        var fn = function (item, ev) {\n            if (!_this[item])\n                return {};\n            var out = {}, k, f;\n            for (k in ev) {\n                f = utils_1.utils.bind(ev[k], _this);\n                _this[item].on(k, f);\n                out[item + \":\" + k] = f;\n            }\n            return out;\n        };\n        utils_1.utils.extend(this._dataEvents, fn('model', model), fn('collection', collection));\n    };\n    DataView.prototype._undelegateDataEvents = function () {\n        if (!this._dataEvents)\n            return;\n        var k, v;\n        for (k in this._dataEvents) {\n            v = this._dataEvents[k];\n            var _a = k.split(':'), item = _a[0], ev = _a[1];\n            if (!this[item])\n                continue;\n            this[item].off(ev, v);\n        }\n        delete this._dataEvents;\n    };\n    DataView.prototype._filterEvents = function (obj) {\n        /*jshint -W030 */\n        var c = {}, m = {}, e = {}, k, v;\n        for (k in obj) {\n            var _a = k.split(' '), ev = _a[0], t = _a[1];\n            ev = ev.trim(), t = t ? t.trim() : \"\", v = obj[k];\n            if (t === 'collection') {\n                c[ev] = v;\n            }\n            else if (t === 'model') {\n                m[ev] = v;\n            }\n            else {\n                e[k] = v;\n            }\n        }\n        return { c: c, m: m, e: e };\n    };\n    return DataView;\n})(templateview_1.TemplateView);\nexports.DataView = DataView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/data-view.js\n ** module id = 10\n ** module chunks = 0\n **/","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar data_view_1 = require('./data-view');\nvar utils_1 = require('./utils');\nvar events_1 = require('./events');\nvar Buffer = (function () {\n    function Buffer() {\n        this.children = [];\n        this.buffer = document.createDocumentFragment();\n    }\n    Buffer.prototype.append = function (view) {\n        this.children.push(view);\n        this.buffer.appendChild(view.el);\n    };\n    return Buffer;\n})();\nvar CollectionView = (function (_super) {\n    __extends(CollectionView, _super);\n    /** CollectionView\n   * @extends DataView\n   * @param {DataViewOptions} options\n   */\n    function CollectionView(options) {\n        //this._options = options||{}\n        this.children = [];\n        this.sort = (options && options.sort != null) ? options.sort : true;\n        _super.call(this, options);\n    }\n    /**\n   * Render the collection view and alle of the children\n   * @return {CollectionView}\n   *\n   */\n    CollectionView.prototype.render = function (options) {\n        this.destroyChildren();\n        this._destroyContainer();\n        _super.prototype.render.call(this, options);\n        this._initContainer();\n        if (this.collection && this.collection.length) {\n            this.renderCollection();\n        }\n        return this;\n    };\n    /**\n     * @protected\n     */\n    CollectionView.prototype.setCollection = function (collection) {\n        _super.prototype.setCollection.call(this, collection);\n        this._delegateCollectionEvents();\n    };\n    CollectionView.prototype.renderCollection = function () {\n        this.destroyChildren();\n        if (this.collection.length != 0) {\n            this.hideEmptyView();\n            this._startBuffering();\n            this._renderCollection();\n            this._stopBuffering();\n        }\n        else {\n            this.showEmptyView();\n        }\n    };\n    /**\n   * Returns a new instance of this.childView with attached model.\n   *\n   * @param {IModel} model\n   * @protected\n   */\n    CollectionView.prototype.getChildView = function (model) {\n        var View = this.getOption('childView') || data_view_1.DataView, options = this.getOption('childViewOptions') || {};\n        return new View(utils_1.utils.extend({\n            model: model\n        }, options));\n    };\n    CollectionView.prototype.renderChildView = function (view, index) {\n        this.triggerMethod('before:render:child', view);\n        view.render();\n        this._attachHTML(view, index);\n        this.triggerMethod('render:child', view);\n    };\n    CollectionView.prototype.showEmptyView = function () {\n    };\n    CollectionView.prototype.hideEmptyView = function () {\n    };\n    CollectionView.prototype.destroyChildren = function () {\n        if (this._container) {\n            this._container.innerHTML = '';\n        }\n        if (this.children.length === 0)\n            return;\n        this.children.forEach(this.removeChildView, this);\n        this.children = [];\n    };\n    CollectionView.prototype.removeChildView = function (view) {\n        if (!view)\n            return;\n        if (typeof view.destroy === 'function') {\n            view.destroy();\n        }\n        if (typeof view.remove === 'function') {\n            view.remove();\n        }\n        this.stopListening(view);\n        //this.children.delete(view);\n        this.children.splice(this.children.indexOf(view), 1);\n        if (this.children.length === 0) {\n            this.showEmptyView();\n        }\n        this._updateIndexes(view, false);\n    };\n    /**\n   * Destroy the collection view and all of it's children\n   * @see JaffaMVC.View\n   * @return {JaffaMVC.View}\n   */\n    CollectionView.prototype.destroy = function () {\n        this.triggerMethod('before:destroy:children');\n        this.destroyChildren();\n        this.triggerMethod('destroy:children');\n        this.hideEmptyView();\n        //if (this._emptyView) this.hideEmptyView();\n        return _super.prototype.destroy.call(this);\n    };\n    CollectionView.prototype._renderCollection = function () {\n        var _this = this;\n        this.triggerMethod('before:render:collection');\n        this.collection.forEach(function (model, index) {\n            var view = _this.getChildView(model);\n            _this._appendChild(view, index);\n        });\n        this.triggerMethod('render:collection');\n    };\n    /**\n   * Append childview to the container\n   * @private\n   * @param {IDataView} view\n   * @param {Number} index\n   */\n    CollectionView.prototype._appendChild = function (view, index) {\n        this._updateIndexes(view, true, index);\n        this._proxyChildViewEvents(view);\n        this.children.push(view);\n        this.hideEmptyView();\n        this.renderChildView(view, index);\n        this.triggerMethod('add:child', view);\n    };\n    /**\n   * Attach the childview's element to the CollectionView.\n   * When in buffer mode, the view is added to a documentfragment to optimize performance\n   * @param {View} view  A view\n   * @param {Number} index The index in which to insert the view\n   * @private\n   */\n    CollectionView.prototype._attachHTML = function (view, index) {\n        if (this._buffer) {\n            this._buffer.append(view);\n        }\n        else {\n            //if (this._isShown) {\n            //  utils.triggerMethodOn(view, 'before:show');\n            //}\n            if (!this._insertBefore(view, index)) {\n                this._insertAfter(view);\n            }\n        }\n    };\n    /**\n   * Proxy event froms childview to the collectionview\n   * @param {IView} view\n   * @private\n   */\n    CollectionView.prototype._proxyChildViewEvents = function (view) {\n        var prefix = this.getOption('prefix') || 'childview';\n        this.listenTo(view, 'all', function () {\n            var args = utils_1.utils.slice(arguments);\n            args[0] = prefix + ':' + args[0];\n            args.splice(1, 0, view);\n            utils_1.utils.call(this.triggerMethod, this, args);\n        });\n    };\n    CollectionView.prototype._updateIndexes = function (view, increment, index) {\n        if (!this.sort)\n            return;\n        if (increment)\n            view._index = index;\n        this.children.forEach(function (lView) {\n            if (lView._index >= view._index) {\n                increment ? lView._index++ : lView._index--;\n            }\n        });\n    };\n    CollectionView.prototype._startBuffering = function () {\n        this._buffer = new Buffer();\n    };\n    CollectionView.prototype._stopBuffering = function () {\n        this._container.appendChild(this._buffer.buffer);\n        delete this._buffer;\n    };\n    CollectionView.prototype._initContainer = function () {\n        var container = this.getOption('childViewContainer');\n        if (container) {\n            container = this.$(container)[0];\n        }\n        else {\n            container = this.el;\n        }\n        this._container = container;\n    };\n    CollectionView.prototype._destroyContainer = function () {\n        if (this._container)\n            delete this._container;\n    };\n    /**\n     * Internal method. Check whether we need to insert the view into\n   * the correct position.\n     * @param  {IView} childView [description]\n     * @param  {number} index     [description]\n     * @return {boolean}           [description]\n     */\n    CollectionView.prototype._insertBefore = function (childView, index) {\n        var currentView;\n        var findPosition = this.sort && (index < this.children.length - 1);\n        if (findPosition) {\n            // Find the view after this one\n            currentView = utils_1.utils.find(this.children, function (view) {\n                return view._index === index + 1;\n            });\n        }\n        if (currentView) {\n            this._container.insertBefore(childView.el, currentView.el);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Internal method. Append a view to the end of the $el\n     * @private\n     */\n    CollectionView.prototype._insertAfter = function (childView) {\n        this._container.appendChild(childView.el);\n    };\n    /**\n     * Delegate collection events\n     * @private\n     */\n    CollectionView.prototype._delegateCollectionEvents = function () {\n        if (this.collection && this.collection instanceof events_1.EventEmitter) {\n            this.listenTo(this.collection, 'add', this._onCollectionAdd);\n            this.listenTo(this.collection, 'remove', this._onCollectionRemove);\n            this.listenTo(this.collection, 'reset', this.render);\n            if (this.sort)\n                this.listenTo(this.collection, 'sort', this._onCollectionSort);\n        }\n    };\n    // Event handlers\n    /**\n     * Called when a model is add to the collection\n     * @param {JaffaMVC.Model|Backbone.model} model Model\n     * @private\n     */\n    CollectionView.prototype._onCollectionAdd = function (model) {\n        var view = this.getChildView(model);\n        var index = this.collection.indexOf(model);\n        this._appendChild(view, index);\n    };\n    /**\n     * Called when a model is removed from the collection\n     * @param {JaffaMVC.Model|Backbone.model} model Model\n     * @private\n     */\n    CollectionView.prototype._onCollectionRemove = function (model) {\n        var view = utils_1.utils.find(this.children, function (view) {\n            return view.model === model;\n        });\n        this.removeChildView(view);\n    };\n    /**\n     * Called when the collection is sorted\n     * @private\n     */\n    CollectionView.prototype._onCollectionSort = function () {\n        var _this = this;\n        var orderChanged = this.collection.find(function (model, index) {\n            var view = utils_1.utils.find(_this.children, function (view) {\n                return view.model === model;\n            });\n            return !view || view._index !== index;\n        });\n        if (orderChanged)\n            this.render();\n    };\n    return CollectionView;\n})(data_view_1.DataView);\nexports.CollectionView = CollectionView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/collection-view.js\n ** module id = 11\n ** module chunks = 0\n **/","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar utils_1 = require('./utils');\nvar object_1 = require('.//object');\nvar Model = (function (_super) {\n    __extends(Model, _super);\n    function Model(attributes, options) {\n        if (attributes === void 0) { attributes = {}; }\n        options = options || {};\n        this._attributes = attributes;\n        this.uid = utils_1.utils.uniqueId('uid');\n        this._changed = {};\n        this.collection = options.collection;\n        _super.call(this);\n    }\n    Object.defineProperty(Model.prototype, \"id\", {\n        get: function () {\n            if (this.idAttribute in this._attributes)\n                return this._attributes[this.idAttribute];\n            return this.uid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Model.prototype.set = function (key, val, options) {\n        if (options === void 0) { options = {}; }\n        var attr, attrs = {}, unset, changes, silent, changing, prev, current;\n        if (key == null)\n            return this;\n        // Handle both `\"key\", value` and `{key: value}` -style arguments.\n        if (typeof key === 'object') {\n            attrs = key;\n            options = val;\n        }\n        else {\n            attrs[key] = val;\n        }\n        options || (options = {});\n        // Run validation.\n        //if (!this._validate(attrs, options)) return false;\n        // Extract attributes and options.\n        unset = options.unset;\n        silent = options.silent;\n        changes = [];\n        changing = this._changing;\n        this._changing = true;\n        if (!changing) {\n            this._previousAttributes = utils_1.utils.extend(Object.create(null), this._attributes);\n            this._changed = {};\n        }\n        current = this._attributes, prev = this._previousAttributes;\n        // For each `set` attribute, update or delete the current value.\n        for (attr in attrs) {\n            val = attrs[attr];\n            if (!utils_1.utils.equal(current[attr], val))\n                changes.push(attr);\n            if (!utils_1.utils.equal(prev[attr], val)) {\n                this._changed[attr] = val;\n            }\n            else {\n                delete this._changed[attr];\n            }\n            unset ? delete current[attr] : current[attr] = val;\n        }\n        // Trigger all relevant attribute changes.\n        if (!silent) {\n            if (changes.length)\n                this._pending = !!options;\n            for (var i = 0, l = changes.length; i < l; i++) {\n                this.trigger('change:' + changes[i], this, current[changes[i]], options);\n            }\n        }\n        // You might be wondering why there's a `while` loop here. Changes can\n        // be recursively nested within `\"change\"` events.\n        if (changing)\n            return this;\n        if (!silent) {\n            while (this._pending) {\n                options = this._pending;\n                this._pending = false;\n                this.trigger('change', this, options);\n            }\n        }\n        this._pending = false;\n        this._changing = false;\n        return this;\n    };\n    Model.prototype.get = function (key) {\n        return this._attributes[key];\n    };\n    Model.prototype.unset = function (key, options) {\n        this.set(key, void 0, utils_1.utils.extend({}, options, { unset: true }));\n    };\n    Model.prototype.has = function (attr) {\n        return this.get(attr) != null;\n    };\n    Model.prototype.hasChanged = function (attr) {\n        if (attr == null)\n            return !!Object.keys(this.changed).length;\n        return utils_1.utils.has(this.changed, attr);\n    };\n    Model.prototype.clear = function (options) {\n        var attrs = {};\n        for (var key in this._attributes)\n            attrs[key] = void 0;\n        return this.set(attrs, utils_1.utils.extend({}, options, { unset: true }));\n    };\n    Object.defineProperty(Model.prototype, \"changed\", {\n        get: function () {\n            return utils_1.utils.extend({}, this._changed);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    Model.prototype.changedAttributes = function (diff) {\n        if (!diff)\n            return this.hasChanged() ? utils_1.utils.extend(Object.create(null), this.changed) : false;\n        var val, changed = {};\n        var old = this._changing ? this._previousAttributes : this._attributes;\n        for (var attr in diff) {\n            if (utils_1.utils.equal(old[attr], (val = diff[attr])))\n                continue;\n            (changed || (changed = {}))[attr] = val;\n        }\n        return changed;\n    };\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    Model.prototype.previous = function (attr) {\n        if (attr == null || !this._previousAttributes)\n            return null;\n        return this._previousAttributes[attr];\n    };\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    Model.prototype.previousAttributes = function () {\n        return utils_1.utils.extend(Object.create(null), this._previousAttributes);\n    };\n    Model.prototype.toJSON = function () {\n        return JSON.parse(JSON.stringify(this._attributes));\n    };\n    Model.prototype.clone = function () {\n        return new (this.constructor)(this._attributes);\n    };\n    return Model;\n})(object_1.BaseObject);\nexports.Model = Model;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/model.js\n ** module id = 12\n ** module chunks = 0\n **/","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar object_1 = require('./object');\nvar utils_1 = require('./utils');\nvar model_1 = require('./model');\nvar setOptions = { add: true, remove: true, merge: true };\nvar addOptions = { add: true, remove: false };\nvar Collection = (function (_super) {\n    __extends(Collection, _super);\n    function Collection(models, options) {\n        if (options === void 0) { options = {}; }\n        this.options = options;\n        if (this.options.model) {\n            this.Model = this.options.model;\n        }\n        //this._byId = {};\n        if (models) {\n            this.add(models);\n        }\n        _super.call(this);\n    }\n    Object.defineProperty(Collection.prototype, \"length\", {\n        /**\n         * The length of the collection\n         * @property {Number} length\n         */\n        get: function () {\n            return this.models.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Collection.prototype, \"Model\", {\n        get: function () {\n            if (!this._model) {\n                this._model = model_1.Model;\n            }\n            return this._model;\n        },\n        set: function (con) {\n            this._model = con;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Collection.prototype, \"models\", {\n        get: function () {\n            return this._models || (this._models = []);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Collection.prototype.add = function (models, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (!Array.isArray(models)) {\n            if (!(models instanceof this.Model)) {\n                models = this.create(models, { add: false });\n            }\n        }\n        else {\n            models = models.map(function (item) {\n                return (item instanceof _this.Model) ? item : _this.create(item, { add: false });\n            });\n        }\n        this.set(models, utils_1.utils.extend({ merge: false }, options, addOptions));\n    };\n    Collection.prototype.set = function (items, options) {\n        if (options === void 0) { options = {}; }\n        options = utils_1.utils.extend({}, setOptions, options);\n        if (options.parse)\n            items = this.parse(items, options);\n        var singular = !Array.isArray(items);\n        var models = (singular ? (items ? [items] : []) : items.slice());\n        var i, l, id, model, attrs, existing, sort;\n        var at = options.at;\n        //var targetModel = this.model;\n        var sortable = this.comparator && (at == null) && options.sort !== false;\n        var sortAttr = typeof this.comparator === 'string' ? this.comparator : null;\n        var toAdd = [], toRemove = [], modelMap = {};\n        var add = options.add, merge = options.merge, remove = options.remove;\n        var order = !sortable && add && remove ? [] : null;\n        // Turn bare objects into model references, and prevent invalid models\n        // from being added.\n        for (i = 0, l = models.length; i < l; i++) {\n            model = models[i];\n            id = model.get(model.idAttribute) || model.uid;\n            // If a duplicate is found, prevent it from being added and\n            // optionally merge it into the existing model.\n            if (existing = this.get(id)) {\n                if (remove)\n                    modelMap[existing.uid] = true;\n                if (merge) {\n                    attrs = model.toJSON();\n                    //if (options.parse) attrs = existing.parse(attrs, options);\n                    existing.set(attrs, options);\n                    if (sortable && !sort && existing.hasChanged(sortAttr))\n                        sort = true;\n                }\n                models[i] = existing;\n            }\n            else if (add) {\n                models[i] = model; //this._prepareModel(attrs, options);\n                if (!model)\n                    continue;\n                toAdd.push(model);\n                this._addReference(model, options);\n            }\n            // Do not add multiple models with the same `id`.\n            model = existing || model;\n            if (order && !modelMap[model.id])\n                order.push(model);\n            modelMap[model.uid] = true;\n        }\n        // Remove nonexistent models if appropriate.\n        if (remove) {\n            for (i = 0, l = this.length; i < l; ++i) {\n                if (!modelMap[(model = this.models[i]).uid])\n                    toRemove.push(model);\n            }\n            if (toRemove.length)\n                this.remove(toRemove, options);\n        }\n        // See if sorting is needed, update `length` and splice in new models.\n        if (toAdd.length || (order && order.length)) {\n            if (sortable)\n                sort = true;\n            //this.length += toAdd.length;\n            if (at != null) {\n                for (i = 0, l = toAdd.length; i < l; i++) {\n                    this.models.splice(at + i, 0, toAdd[i]);\n                }\n            }\n            else {\n                if (order)\n                    this.models.length = 0;\n                var orderedModels = order || toAdd;\n                for (i = 0, l = orderedModels.length; i < l; i++) {\n                    this.models.push(orderedModels[i]);\n                }\n            }\n        }\n        // Silently sort the collection if appropriate.\n        if (sort)\n            this.sort({ silent: true });\n        // Unless silenced, it's time to fire all appropriate add/sort events.\n        if (!options.silent) {\n            for (i = 0, l = toAdd.length; i < l; i++) {\n                (model = toAdd[i]).trigger('add', model, this, options);\n            }\n            if (sort || (order && order.length))\n                this.trigger('sort', this, options);\n            if (toAdd.length || toRemove.length)\n                this.trigger('update', this, options);\n        }\n        // Return the added (or merged) model (or models).\n        return singular ? models[0] : models;\n    };\n    Collection.prototype.remove = function (models, options) {\n        if (options === void 0) { options = {}; }\n        var singular = !Array.isArray(models);\n        models = (singular ? [models] : models.slice());\n        var i, l, index, model;\n        for (i = 0, l = models.length; i < l; i++) {\n            model = models[i] = this.get(models[i]);\n            if (!model)\n                continue;\n            index = this.indexOf(model);\n            this.models.splice(index, 1);\n            if (!options.silent) {\n                options.index = index;\n                model.trigger('remove', model, this, options);\n            }\n            this._removeReference(model, options);\n        }\n        return singular ? models[0] : models;\n    };\n    Collection.prototype.get = function (id) {\n        return this.find(id);\n    };\n    // Get the model at the given index.\n    Collection.prototype.at = function (index) {\n        return this.models[index];\n    };\n    Collection.prototype.clone = function (options) {\n        options = options || this.options;\n        return new this.constructor(this.models, options);\n    };\n    Collection.prototype.sort = function (options) {\n        if (options === void 0) { options = {}; }\n        if (!this.comparator)\n            throw new Error('Cannot sort a set without a comparator');\n        // Run sort based on type of `comparator`.\n        if (typeof this.comparator === 'string' || this.comparator.length === 1) {\n            this._models = this.sortBy(this.comparator, this);\n        }\n        else {\n            this.models.sort(this.comparator.bind(this));\n        }\n        if (!options.silent)\n            this.trigger('sort', this, options);\n        return this;\n    };\n    Collection.prototype.sortBy = function (key, context) {\n        return utils_1.utils.sortBy(this._models, key, context);\n    };\n    Collection.prototype.push = function (model, options) {\n        if (options === void 0) { options = {}; }\n        return this.add(model, utils_1.utils.extend({ at: this.length }, options));\n    };\n    Collection.prototype.reset = function (models, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this.forEach(function (model) {\n            _this._removeReference(model, options);\n        });\n        options.previousModels = this.models;\n        this._reset();\n        models = this.add(models, options);\n        if (!options.silent)\n            this.trigger('reset', this, options);\n        return models;\n    };\n    Collection.prototype.create = function (values, options) {\n        if (options === void 0) { options = { add: true }; }\n        var model = new this.Model(values, options);\n        if (options.add)\n            this.add(model);\n        return model;\n    };\n    Collection.prototype.parse = function (models, options) {\n        if (options === void 0) { options = {}; }\n        return models;\n    };\n    Collection.prototype.find = function (nidOrFn) {\n        var model;\n        if (typeof nidOrFn === 'function') {\n            model = utils_1.utils.find(this.models, nidOrFn);\n        }\n        else {\n            model = utils_1.utils.find(this.models, function (model) {\n                return model.id == nidOrFn || model.uid == nidOrFn || nidOrFn === model;\n            });\n        }\n        return model;\n    };\n    Collection.prototype.forEach = function (iterator, ctx) {\n        for (var i = 0, l = this.models.length; i < l; i++) {\n            iterator.call(ctx || this, this.models[i], i);\n        }\n        return this;\n    };\n    Collection.prototype.indexOf = function (model) {\n        return this.models.indexOf(model);\n    };\n    Collection.prototype.toJSON = function () {\n        return this.models.map(function (m) { return m.toJSON(); });\n    };\n    Collection.prototype._removeReference = function (model, options) {\n        if (this === model.collection)\n            delete model.collection;\n        this.stopListening(model);\n    };\n    Collection.prototype._addReference = function (model, options) {\n        if (!model.collection)\n            model.collection = this;\n        this.listenTo(model, 'all', this._onModelEvent);\n    };\n    Collection.prototype._reset = function () {\n        this._models = [];\n    };\n    Collection.prototype._onModelEvent = function (event, model, collection, options) {\n        if ((event === 'add' || event === 'remove') && collection !== this)\n            return;\n        if (event === 'destroy')\n            this.remove(model, options);\n        utils_1.utils.call(this.trigger, this, utils_1.utils.slice(arguments));\n    };\n    return Collection;\n})(object_1.BaseObject);\nexports.Collection = Collection;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/collection.js\n ** module id = 13\n ** module chunks = 0\n **/"],"sourceRoot":""}